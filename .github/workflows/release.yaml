name: Build and Release

on:
  push:
    tags:
      - "v*"

env:
  PROJECT_NAME: surl

permissions: write-all
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            binary_extension: .exe

          - os: macos-latest
            target: aarch64-apple-darwin
            binary_extension: ""

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_extension: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run unit tests
        run: cargo test --all

      - name: Install cross
        run: cargo install cross

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cross build --target ${{ matrix.target }} --release
        env:
          CARGO_TERM_COLOR: always

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{PROJECT_NAME}}-${{ matrix.target }}
          path: target/${{matrix.target}}/release/${{PROJECT_NAME}}${{ matrix.binary_extension }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{PROJECT_NAME}}-${{ matrix.target }}${{ matrix.binary_extension }}
          asset_name: ${{PROJECT_NAME}}-${{ matrix.os }}
          asset_content_type: application/octet-stream
